{ 'status': 200,
  statusText: 'OK',
  headers:
   { '0': 'A',
     '1': 'c',
     '2': 'c',
     '3': 'e',
     '4': 's',
     '5': 's',
     '6': '-',
     '7': 'C',
     '8': 'o',
     '9': 'n',
     '10': 't',
     '11': 'r',
     '12': 'o',
     '13': 'l',
     '14': '-',
     '15': 'A',
     '16': 'l',
     '17': 'l',
     '18': 'o',
     '19': 'w',
     '20': '-',
     '21': 'H',
     '22': 'e',
     '23': 'a',
     '24': 'd',
     '25': 'e',
     '26': 'r',
     '27': 's',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '2954',
     connection: 'close',
     date: 'Fri, 15 Mar 2019 12:37:35 GMT',
     'x-amzn-requestid': '1c30f7a8-471f-11e9-a8de-b7c26ccf794d',
     'access-control-allow-origin': '*',
     'x-amzn-remapped-content-length': '2954',
     'x-amzn-remapped-connection': 'close',
     'x-amz-apigw-id': 'WlVmaGv9DoEFicA=',
     etag: 'W/"b8a-ugwdWAV+9jr1SzPB+DVrQMBmXOc"',
     'x-powered-by': 'Express',
     'x-amzn-trace-id': 'Root=1-5c8b9c8f-28b8c0e470fdf5f8ebb7a1d2;Sampled=0',
     'x-amzn-remapped-date': 'Fri, 15 Mar 2019 12:37:35 GMT',
     'x-cache': 'Miss from cloudfront',
     via:
      '1.1 886783733f8a366ce1cdb37283eece8e.cloudfront.net (CloudFront)',
     'x-amz-cf-id': 'GDtTFfBSd25rztbGkRX1bWiW7dudmXnxsPXj7t31c0uQjmCg5Dyxhw==' },
  config:
   { adapter: [Function: httpAdapter],
     transformRequest: { '0': [Function: transformRequest] },
     transformResponse: { '0': [Function: transformResponse] },
     timeout: 0,
     xsrfCookieName: 'XSRF-TOKEN',
     xsrfHeaderName: 'X-XSRF-TOKEN',
     maxContentLength: -1,
     validateStatus: [Function: validateStatus],
     headers:
      { Accept: 'application/json, text/plain, */*',
        'User-Agent': 'axios/0.18.0' },
     method: 'get',
     url:
      'https://51j1fut727.execute-api.eu-west-1.amazonaws.com/Prod/account/0001',
     data: undefined },
  request:
   ClientRequest {
     _events:
      [Object: null prototype] {
        socket: [Function],
        abort: [Function],
        aborted: [Function],
        error: [Function],
        timeout: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 6,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close:
            [ [Function: onSocketCloseDestroySSL],
              { [Function: bound onceWrapper] listener: [Function] },
              [Function: onClose],
              [Function: socketCloseListener] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error: [Function: socketErrorListener],
           finish:
            { [Function: bound onceWrapper] listener: [Function: destroy] } },
        _eventsCount: 8,
        connecting: false,
        _hadError: false,
        _handle:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        _parent: null,
        _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: false,
           autoDestroy: false,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: true,
           needDrain: false,
           ending: true,
           ended: true,
           finished: false,
           destroyed: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 1,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           autoDestroy: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey:
            '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
           host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           pathname: '/Prod/account/0001',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': "I'm a Teapot",
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                 ClientRequest: [Function: ClientRequest],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage: [Function: IncomingMessage],
                 OutgoingMessage: [Function: OutgoingMessage],
                 Server: [Function: Server],
                 ServerResponse: [Function: ServerResponse],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] },
              'https:':
               { Agent: [Function: Agent],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                           <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                       list:
                        [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                 Server: [Function: Server],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           auth: undefined,
           agent: undefined,
           headers:
            { Accept: 'application/json, text/plain, */*',
              'User-Agent': 'axios/0.18.0' },
           method: 'get',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets:
               { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                     <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                 list:
                  [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
           servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           singleUse: true } },
     connection:
      TLSSocket {
        _tlsOptions:
         { pipe: false,
           secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           isServer: false,
           requestCert: true,
           rejectUnauthorized: true,
           session: undefined,
           ALPNProtocols: undefined,
           requestOCSP: undefined },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events:
         [Object: null prototype] {
           close:
            [ [Function: onSocketCloseDestroySSL],
              { [Function: bound onceWrapper] listener: [Function] },
              [Function: onClose],
              [Function: socketCloseListener] ],
           end: [Function: onReadableStreamEnd],
           secure: [Function: onConnectSecure],
           free: [Function: onFree],
           agentRemove: [Function: onRemove],
           drain: [Function: ondrain],
           error: [Function: socketErrorListener],
           finish:
            { [Function: bound onceWrapper] listener: [Function: destroy] } },
        _eventsCount: 8,
        connecting: false,
        _hadError: false,
        _handle:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        _parent: null,
        _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: false,
           endEmitted: false,
           reading: true,
           sync: false,
           needReadable: true,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: false,
           autoDestroy: false,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: false,
           decoder: null,
           encoding: null },
        readable: true,
        _maxListeners: undefined,
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: true,
           needDrain: false,
           ending: true,
           ended: true,
           finished: false,
           destroyed: false,
           decodeStrings: false,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: false,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 1,
           prefinished: false,
           errorEmitted: false,
           emitClose: false,
           autoDestroy: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(res)]:
         TLSWrap {
           _parent:
            TCP {
              reading: [Getter/Setter],
              onread: null,
              onconnection: null,
              [Symbol(owner)]: [Circular] },
           _parentWrap: undefined,
           _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
           reading: true,
           onread: [Function: onStreamRead],
           onhandshakestart: [Function: noop],
           onhandshakedone: [Function: bound ],
           onocspresponse: [Function: onocspresponse],
           onerror: [Function: onerror],
           [Symbol(owner)]: [Circular] },
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]:
         { rejectUnauthorized: true,
           ciphers:
            'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
           checkServerIdentity: [Function: checkServerIdentity],
           minDHSize: 1024,
           encoding: null,
           _agentKey:
            '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
           host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           pathname: '/Prod/account/0001',
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': "I'm a Teapot",
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                 ClientRequest: [Function: ClientRequest],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage: [Function: IncomingMessage],
                 OutgoingMessage: [Function: OutgoingMessage],
                 Server: [Function: Server],
                 ServerResponse: [Function: ServerResponse],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] },
              'https:':
               { Agent: [Function: Agent],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                           <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                       list:
                        [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                 Server: [Function: Server],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           port: 443,
           hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           auth: undefined,
           agent: undefined,
           headers:
            { Accept: 'application/json, text/plain, */*',
              'User-Agent': 'axios/0.18.0' },
           method: 'get',
           path: null,
           protocol: 'https:',
           maxBodyLength: 10485760,
           maxRedirects: 21,
           _defaultAgent:
            Agent {
              _events: [Object: null prototype] { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { path: null },
              requests: {},
              sockets:
               { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache:
               { map:
                  { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                     <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                 list:
                  [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
           servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           singleUse: true } },
     _header:
      'GET /Prod/account/0001 HTTP/1.1\r\nAccept: application/json, text/plain, */*\r\nUser-Agent: axios/0.18.0\r\nHost: 51j1fut727.execute-api.eu-west-1.amazonaws.com\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object: null prototype] { free: [Function] },
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: { path: null },
        requests: {},
        sockets:
         { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
            [ TLSSocket {
                _tlsOptions:
                 { pipe: false,
                   secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                   isServer: false,
                   requestCert: true,
                   rejectUnauthorized: true,
                   session: undefined,
                   ALPNProtocols: undefined,
                   requestOCSP: undefined },
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                _SNICallback: null,
                servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events:
                 [Object: null prototype] {
                   close:
                    [ [Function: onSocketCloseDestroySSL],
                      { [Function: bound onceWrapper] listener: [Function] },
                      [Function: onClose],
                      [Function: socketCloseListener] ],
                   end: [Function: onReadableStreamEnd],
                   secure: [Function: onConnectSecure],
                   free: [Function: onFree],
                   agentRemove: [Function: onRemove],
                   drain: [Function: ondrain],
                   error: [Function: socketErrorListener],
                   finish:
                    { [Function: bound onceWrapper] listener: [Function: destroy] } },
                _eventsCount: 8,
                connecting: false,
                _hadError: false,
                _handle:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [Getter/Setter],
                      onread: null,
                      onconnection: null,
                      [Symbol(owner)]: [Circular] },
                   _parentWrap: undefined,
                   _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                   reading: true,
                   onread: [Function: onStreamRead],
                   onhandshakestart: [Function: noop],
                   onhandshakedone: [Function: bound ],
                   onocspresponse: [Function: onocspresponse],
                   onerror: [Function: onerror],
                   [Symbol(owner)]: [Circular] },
                _parent: null,
                _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                _readableState:
                 ReadableState {
                   objectMode: false,
                   highWaterMark: 16384,
                   buffer: BufferList { head: null, tail: null, length: 0 },
                   length: 0,
                   pipes: null,
                   pipesCount: 0,
                   flowing: true,
                   ended: false,
                   endEmitted: false,
                   reading: true,
                   sync: false,
                   needReadable: true,
                   emittedReadable: false,
                   readableListening: false,
                   resumeScheduled: false,
                   emitClose: false,
                   autoDestroy: false,
                   destroyed: false,
                   defaultEncoding: 'utf8',
                   awaitDrain: 0,
                   readingMore: false,
                   decoder: null,
                   encoding: null },
                readable: true,
                _maxListeners: undefined,
                _writableState:
                 WritableState {
                   objectMode: false,
                   highWaterMark: 16384,
                   finalCalled: true,
                   needDrain: false,
                   ending: true,
                   ended: true,
                   finished: false,
                   destroyed: false,
                   decodeStrings: false,
                   defaultEncoding: 'utf8',
                   length: 0,
                   writing: false,
                   corked: 0,
                   sync: false,
                   bufferProcessing: false,
                   onwrite: [Function: bound onwrite],
                   writecb: null,
                   writelen: 0,
                   bufferedRequest: null,
                   lastBufferedRequest: null,
                   pendingcb: 1,
                   prefinished: false,
                   errorEmitted: false,
                   emitClose: false,
                   autoDestroy: false,
                   bufferedRequestCount: 0,
                   corkedRequestsFree:
                    { next: null,
                      entry: null,
                      finish: [Function: bound onCorkedFinish] } },
                writable: false,
                allowHalfOpen: false,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [Getter/Setter],
                      onread: null,
                      onconnection: null,
                      [Symbol(owner)]: [Circular] },
                   _parentWrap: undefined,
                   _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                   reading: true,
                   onread: [Function: onStreamRead],
                   onhandshakestart: [Function: noop],
                   onhandshakedone: [Function: bound ],
                   onocspresponse: [Function: onocspresponse],
                   onerror: [Function: onerror],
                   [Symbol(owner)]: [Circular] },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: [Circular],
                [Symbol(res)]:
                 TLSWrap {
                   _parent:
                    TCP {
                      reading: [Getter/Setter],
                      onread: null,
                      onconnection: null,
                      [Symbol(owner)]: [Circular] },
                   _parentWrap: undefined,
                   _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                   reading: true,
                   onread: [Function: onStreamRead],
                   onhandshakestart: [Function: noop],
                   onhandshakedone: [Function: bound ],
                   onocspresponse: [Function: onocspresponse],
                   onerror: [Function: onerror],
                   [Symbol(owner)]: [Circular] },
                [Symbol(asyncId)]: 5,
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]:
                 { rejectUnauthorized: true,
                   ciphers:
                    'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                   checkServerIdentity: [Function: checkServerIdentity],
                   minDHSize: 1024,
                   encoding: null,
                   _agentKey:
                    '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
                   host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                   pathname: '/Prod/account/0001',
                   nativeProtocols:
                    { 'http:':
                       { _connectionListener: [Function: connectionListener],
                         METHODS:
                          [ 'ACL',
                            'BIND',
                            'CHECKOUT',
                            'CONNECT',
                            'COPY',
                            'DELETE',
                            'GET',
                            'HEAD',
                            'LINK',
                            'LOCK',
                            'M-SEARCH',
                            'MERGE',
                            'MKACTIVITY',
                            'MKCALENDAR',
                            'MKCOL',
                            'MOVE',
                            'NOTIFY',
                            'OPTIONS',
                            'PATCH',
                            'POST',
                            'PROPFIND',
                            'PROPPATCH',
                            'PURGE',
                            'PUT',
                            'REBIND',
                            'REPORT',
                            'SEARCH',
                            'SOURCE',
                            'SUBSCRIBE',
                            'TRACE',
                            'UNBIND',
                            'UNLINK',
                            'UNLOCK',
                            'UNSUBSCRIBE' ],
                         STATUS_CODES:
                          { '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Unordered Collection',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required' },
                         Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                         ClientRequest: [Function: ClientRequest],
                         globalAgent:
                          Agent {
                            _events: [Object: null prototype] { free: [Function] },
                            _eventsCount: 1,
                            _maxListeners: undefined,
                            defaultPort: 80,
                            protocol: 'http:',
                            options: { path: null },
                            requests: {},
                            sockets: {},
                            freeSockets: {},
                            keepAliveMsecs: 1000,
                            keepAlive: false,
                            maxSockets: Infinity,
                            maxFreeSockets: 256 },
                         IncomingMessage: [Function: IncomingMessage],
                         OutgoingMessage: [Function: OutgoingMessage],
                         Server: [Function: Server],
                         ServerResponse: [Function: ServerResponse],
                         createServer: [Function: createServer],
                         get: [Function: get],
                         request: [Function: request] },
                      'https:':
                       { Agent: [Function: Agent],
                         globalAgent: [Circular],
                         Server: [Function: Server],
                         createServer: [Function: createServer],
                         get: [Function: get],
                         request: [Function: request] } },
                   port: 443,
                   hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                   auth: undefined,
                   agent: undefined,
                   headers:
                    { Accept: 'application/json, text/plain, */*',
                      'User-Agent': 'axios/0.18.0' },
                   method: 'get',
                   path: null,
                   protocol: 'https:',
                   maxBodyLength: 10485760,
                   maxRedirects: 21,
                   _defaultAgent: [Circular],
                   servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                   singleUse: true } } ] },
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache:
         { map:
            { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
               <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
           list:
            [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/Prod/account/0001',
     _ended: true,
     res:
      IncomingMessage {
        _readableState:
         ReadableState {
           objectMode: false,
           highWaterMark: 16384,
           buffer: BufferList { head: null, tail: null, length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: true,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: true,
           autoDestroy: false,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: true,
           decoder: null,
           encoding: null },
        readable: false,
        _events:
         [Object: null prototype] {
           end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
           data: [Function: handleStreamData],
           error: [Function: handleStreamError] },
        _eventsCount: 3,
        _maxListeners: undefined,
        socket:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close:
               [ [Function: onSocketCloseDestroySSL],
                 { [Function: bound onceWrapper] listener: [Function] },
                 [Function: onClose],
                 [Function: socketCloseListener] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error: [Function: socketErrorListener],
              finish:
               { [Function: bound onceWrapper] listener: [Function: destroy] } },
           _eventsCount: 8,
           connecting: false,
           _hadError: false,
           _handle:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _parent: null,
           _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: true,
              needDrain: false,
              ending: true,
              ended: true,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 1,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           [Symbol(asyncId)]: 5,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 0,
           [Symbol(kBytesWritten)]: 0,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey:
               '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
              host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              pathname: '/Prod/account/0001',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': "I'm a Teapot",
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                    ClientRequest: [Function: ClientRequest],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage: [Function: IncomingMessage],
                    OutgoingMessage: [Function: OutgoingMessage],
                    Server: [Function: Server],
                    ServerResponse: [Function: ServerResponse],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 'https:':
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                              <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                          list:
                           [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              auth: undefined,
              agent: undefined,
              headers:
               { Accept: 'application/json, text/plain, */*',
                 'User-Agent': 'axios/0.18.0' },
              method: 'get',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets:
                  { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                        <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                    list:
                     [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
              servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              singleUse: true } },
        connection:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close:
               [ [Function: onSocketCloseDestroySSL],
                 { [Function: bound onceWrapper] listener: [Function] },
                 [Function: onClose],
                 [Function: socketCloseListener] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error: [Function: socketErrorListener],
              finish:
               { [Function: bound onceWrapper] listener: [Function: destroy] } },
           _eventsCount: 8,
           connecting: false,
           _hadError: false,
           _handle:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _parent: null,
           _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: true,
              needDrain: false,
              ending: true,
              ended: true,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 1,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           [Symbol(asyncId)]: 5,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 0,
           [Symbol(kBytesWritten)]: 0,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey:
               '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
              host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              pathname: '/Prod/account/0001',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': "I'm a Teapot",
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                    ClientRequest: [Function: ClientRequest],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage: [Function: IncomingMessage],
                    OutgoingMessage: [Function: OutgoingMessage],
                    Server: [Function: Server],
                    ServerResponse: [Function: ServerResponse],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 'https:':
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                              <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                          list:
                           [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              auth: undefined,
              agent: undefined,
              headers:
               { Accept: 'application/json, text/plain, */*',
                 'User-Agent': 'axios/0.18.0' },
              method: 'get',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets:
                  { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                        <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                    list:
                     [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
              servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              singleUse: true } },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
         { '0': 'A',
           '1': 'c',
           '2': 'c',
           '3': 'e',
           '4': 's',
           '5': 's',
           '6': '-',
           '7': 'C',
           '8': 'o',
           '9': 'n',
           '10': 't',
           '11': 'r',
           '12': 'o',
           '13': 'l',
           '14': '-',
           '15': 'A',
           '16': 'l',
           '17': 'l',
           '18': 'o',
           '19': 'w',
           '20': '-',
           '21': 'H',
           '22': 'e',
           '23': 'a',
           '24': 'd',
           '25': 'e',
           '26': 'r',
           '27': 's',
           'content-type': 'application/json; charset=utf-8',
           'content-length': '2954',
           connection: 'close',
           date: 'Fri, 15 Mar 2019 12:37:35 GMT',
           'x-amzn-requestid': '1c30f7a8-471f-11e9-a8de-b7c26ccf794d',
           'access-control-allow-origin': '*',
           'x-amzn-remapped-content-length': '2954',
           'x-amzn-remapped-connection': 'close',
           'x-amz-apigw-id': 'WlVmaGv9DoEFicA=',
           etag: 'W/"b8a-ugwdWAV+9jr1SzPB+DVrQMBmXOc"',
           'x-powered-by': 'Express',
           'x-amzn-trace-id': 'Root=1-5c8b9c8f-28b8c0e470fdf5f8ebb7a1d2;Sampled=0',
           'x-amzn-remapped-date': 'Fri, 15 Mar 2019 12:37:35 GMT',
           'x-cache': 'Miss from cloudfront',
           via:
            '1.1 886783733f8a366ce1cdb37283eece8e.cloudfront.net (CloudFront)',
           'x-amz-cf-id': 'GDtTFfBSd25rztbGkRX1bWiW7dudmXnxsPXj7t31c0uQjmCg5Dyxhw==' },
        rawHeaders:
         [ 'Content-Type',
           'application/json; charset=utf-8',
           'Content-Length',
           '2954',
           'Connection',
           'close',
           'Date',
           'Fri, 15 Mar 2019 12:37:35 GMT',
           'x-amzn-RequestId',
           '1c30f7a8-471f-11e9-a8de-b7c26ccf794d',
           '11',
           'r',
           '22',
           'e',
           '12',
           'o',
           '23',
           'a',
           '13',
           'l',
           '24',
           'd',
           'access-control-allow-origin',
           '*',
           '14',
           '-',
           '25',
           'e',
           '15',
           'A',
           '26',
           'r',
           '16',
           'l',
           '27',
           's',
           '17',
           'l',
           '18',
           'o',
           '19',
           'w',
           'x-amzn-Remapped-content-length',
           '2954',
           'x-amzn-Remapped-connection',
           'close',
           '0',
           'A',
           '1',
           'c',
           'x-amz-apigw-id',
           'WlVmaGv9DoEFicA=',
           '2',
           'c',
           '3',
           'e',
           '4',
           's',
           'etag',
           'W/"b8a-ugwdWAV+9jr1SzPB+DVrQMBmXOc"',
           '5',
           's',
           'x-powered-by',
           'Express',
           '6',
           '-',
           '7',
           'C',
           '8',
           'o',
           '9',
           'n',
           'X-Amzn-Trace-Id',
           'Root=1-5c8b9c8f-28b8c0e470fdf5f8ebb7a1d2;Sampled=0',
           'x-amzn-Remapped-date',
           'Fri, 15 Mar 2019 12:37:35 GMT',
           '20',
           '-',
           '21',
           'H',
           '10',
           't',
           'X-Cache',
           'Miss from cloudfront',
           'Via',
           '1.1 886783733f8a366ce1cdb37283eece8e.cloudfront.net (CloudFront)',
           'X-Amz-Cf-Id',
           'GDtTFfBSd25rztbGkRX1bWiW7dudmXnxsPXj7t31c0uQjmCg5Dyxhw==' ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client:
         TLSSocket {
           _tlsOptions:
            { pipe: false,
              secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined },
           _secureEstablished: true,
           _securePending: false,
           _newSessionPending: false,
           _controlReleased: true,
           _SNICallback: null,
           servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           alpnProtocol: false,
           authorized: true,
           authorizationError: null,
           encrypted: true,
           _events:
            [Object: null prototype] {
              close:
               [ [Function: onSocketCloseDestroySSL],
                 { [Function: bound onceWrapper] listener: [Function] },
                 [Function: onClose],
                 [Function: socketCloseListener] ],
              end: [Function: onReadableStreamEnd],
              secure: [Function: onConnectSecure],
              free: [Function: onFree],
              agentRemove: [Function: onRemove],
              drain: [Function: ondrain],
              error: [Function: socketErrorListener],
              finish:
               { [Function: bound onceWrapper] listener: [Function: destroy] } },
           _eventsCount: 8,
           connecting: false,
           _hadError: false,
           _handle:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _parent: null,
           _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           _readableState:
            ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: null,
              pipesCount: 0,
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              defaultEncoding: 'utf8',
              awaitDrain: 0,
              readingMore: false,
              decoder: null,
              encoding: null },
           readable: true,
           _maxListeners: undefined,
           _writableState:
            WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: true,
              needDrain: false,
              ending: true,
              ended: true,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              bufferedRequest: null,
              lastBufferedRequest: null,
              pendingcb: 1,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              bufferedRequestCount: 0,
              corkedRequestsFree:
               { next: null,
                 entry: null,
                 finish: [Function: bound onCorkedFinish] } },
           writable: false,
           allowHalfOpen: false,
           _sockname: null,
           _pendingData: null,
           _pendingEncoding: '',
           server: undefined,
           _server: null,
           ssl:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           _requestCert: true,
           _rejectUnauthorized: true,
           parser: null,
           _httpMessage: [Circular],
           [Symbol(res)]:
            TLSWrap {
              _parent:
               TCP {
                 reading: [Getter/Setter],
                 onread: null,
                 onconnection: null,
                 [Symbol(owner)]: [Circular] },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
              reading: true,
              onread: [Function: onStreamRead],
              onhandshakestart: [Function: noop],
              onhandshakedone: [Function: bound ],
              onocspresponse: [Function: onocspresponse],
              onerror: [Function: onerror],
              [Symbol(owner)]: [Circular] },
           [Symbol(asyncId)]: 5,
           [Symbol(lastWriteQueueSize)]: 0,
           [Symbol(timeout)]: null,
           [Symbol(kBytesRead)]: 0,
           [Symbol(kBytesWritten)]: 0,
           [Symbol(connect-options)]:
            { rejectUnauthorized: true,
              ciphers:
               'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              encoding: null,
              _agentKey:
               '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
              host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              pathname: '/Prod/account/0001',
              nativeProtocols:
               { 'http:':
                  { _connectionListener: [Function: connectionListener],
                    METHODS:
                     [ 'ACL',
                       'BIND',
                       'CHECKOUT',
                       'CONNECT',
                       'COPY',
                       'DELETE',
                       'GET',
                       'HEAD',
                       'LINK',
                       'LOCK',
                       'M-SEARCH',
                       'MERGE',
                       'MKACTIVITY',
                       'MKCALENDAR',
                       'MKCOL',
                       'MOVE',
                       'NOTIFY',
                       'OPTIONS',
                       'PATCH',
                       'POST',
                       'PROPFIND',
                       'PROPPATCH',
                       'PURGE',
                       'PUT',
                       'REBIND',
                       'REPORT',
                       'SEARCH',
                       'SOURCE',
                       'SUBSCRIBE',
                       'TRACE',
                       'UNBIND',
                       'UNLINK',
                       'UNLOCK',
                       'UNSUBSCRIBE' ],
                    STATUS_CODES:
                     { '100': 'Continue',
                       '101': 'Switching Protocols',
                       '102': 'Processing',
                       '103': 'Early Hints',
                       '200': 'OK',
                       '201': 'Created',
                       '202': 'Accepted',
                       '203': 'Non-Authoritative Information',
                       '204': 'No Content',
                       '205': 'Reset Content',
                       '206': 'Partial Content',
                       '207': 'Multi-Status',
                       '208': 'Already Reported',
                       '226': 'IM Used',
                       '300': 'Multiple Choices',
                       '301': 'Moved Permanently',
                       '302': 'Found',
                       '303': 'See Other',
                       '304': 'Not Modified',
                       '305': 'Use Proxy',
                       '307': 'Temporary Redirect',
                       '308': 'Permanent Redirect',
                       '400': 'Bad Request',
                       '401': 'Unauthorized',
                       '402': 'Payment Required',
                       '403': 'Forbidden',
                       '404': 'Not Found',
                       '405': 'Method Not Allowed',
                       '406': 'Not Acceptable',
                       '407': 'Proxy Authentication Required',
                       '408': 'Request Timeout',
                       '409': 'Conflict',
                       '410': 'Gone',
                       '411': 'Length Required',
                       '412': 'Precondition Failed',
                       '413': 'Payload Too Large',
                       '414': 'URI Too Long',
                       '415': 'Unsupported Media Type',
                       '416': 'Range Not Satisfiable',
                       '417': 'Expectation Failed',
                       '418': "I'm a Teapot",
                       '421': 'Misdirected Request',
                       '422': 'Unprocessable Entity',
                       '423': 'Locked',
                       '424': 'Failed Dependency',
                       '425': 'Unordered Collection',
                       '426': 'Upgrade Required',
                       '428': 'Precondition Required',
                       '429': 'Too Many Requests',
                       '431': 'Request Header Fields Too Large',
                       '451': 'Unavailable For Legal Reasons',
                       '500': 'Internal Server Error',
                       '501': 'Not Implemented',
                       '502': 'Bad Gateway',
                       '503': 'Service Unavailable',
                       '504': 'Gateway Timeout',
                       '505': 'HTTP Version Not Supported',
                       '506': 'Variant Also Negotiates',
                       '507': 'Insufficient Storage',
                       '508': 'Loop Detected',
                       '509': 'Bandwidth Limit Exceeded',
                       '510': 'Not Extended',
                       '511': 'Network Authentication Required' },
                    Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                    ClientRequest: [Function: ClientRequest],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 80,
                       protocol: 'http:',
                       options: { path: null },
                       requests: {},
                       sockets: {},
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256 },
                    IncomingMessage: [Function: IncomingMessage],
                    OutgoingMessage: [Function: OutgoingMessage],
                    Server: [Function: Server],
                    ServerResponse: [Function: ServerResponse],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] },
                 'https:':
                  { Agent: [Function: Agent],
                    globalAgent:
                     Agent {
                       _events: [Object: null prototype] { free: [Function] },
                       _eventsCount: 1,
                       _maxListeners: undefined,
                       defaultPort: 443,
                       protocol: 'https:',
                       options: { path: null },
                       requests: {},
                       sockets:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                       freeSockets: {},
                       keepAliveMsecs: 1000,
                       keepAlive: false,
                       maxSockets: Infinity,
                       maxFreeSockets: 256,
                       maxCachedSessions: 100,
                       _sessionCache:
                        { map:
                           { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                              <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                          list:
                           [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request] } },
              port: 443,
              hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              auth: undefined,
              agent: undefined,
              headers:
               { Accept: 'application/json, text/plain, */*',
                 'User-Agent': 'axios/0.18.0' },
              method: 'get',
              path: null,
              protocol: 'https:',
              maxBodyLength: 10485760,
              maxRedirects: 21,
              _defaultAgent:
               Agent {
                 _events: [Object: null prototype] { free: [Function] },
                 _eventsCount: 1,
                 _maxListeners: undefined,
                 defaultPort: 443,
                 protocol: 'https:',
                 options: { path: null },
                 requests: {},
                 sockets:
                  { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::': [ [Circular] ] },
                 freeSockets: {},
                 keepAliveMsecs: 1000,
                 keepAlive: false,
                 maxSockets: Infinity,
                 maxFreeSockets: 256,
                 maxCachedSessions: 100,
                 _sessionCache:
                  { map:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                        <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                    list:
                     [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
              servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
              singleUse: true } },
        _consuming: false,
        _dumped: false,
        req: [Circular],
        responseUrl:
         'https://51j1fut727.execute-api.eu-west-1.amazonaws.com/Prod/account/0001',
        redirects: [] },
     aborted: false,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     _redirectable:
      Writable {
        _writableState:
         WritableState {
           objectMode: false,
           highWaterMark: 16384,
           finalCalled: false,
           needDrain: false,
           ending: false,
           ended: false,
           finished: false,
           destroyed: false,
           decodeStrings: true,
           defaultEncoding: 'utf8',
           length: 0,
           writing: false,
           corked: 0,
           sync: true,
           bufferProcessing: false,
           onwrite: [Function: bound onwrite],
           writecb: null,
           writelen: 0,
           bufferedRequest: null,
           lastBufferedRequest: null,
           pendingcb: 0,
           prefinished: false,
           errorEmitted: false,
           emitClose: true,
           autoDestroy: false,
           bufferedRequestCount: 0,
           corkedRequestsFree:
            { next: null,
              entry: null,
              finish: [Function: bound onCorkedFinish] } },
        writable: true,
        _events:
         [Object: null prototype] {
           response: [Function: handleResponse],
           error: [Function: handleRequestError] },
        _eventsCount: 2,
        _maxListeners: undefined,
        _options:
         { maxRedirects: 21,
           maxBodyLength: 10485760,
           protocol: 'https:',
           path: '/Prod/account/0001',
           method: 'get',
           headers:
            { Accept: 'application/json, text/plain, */*',
              'User-Agent': 'axios/0.18.0' },
           agent: undefined,
           auth: undefined,
           hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
           port: null,
           nativeProtocols:
            { 'http:':
               { _connectionListener: [Function: connectionListener],
                 METHODS:
                  [ 'ACL',
                    'BIND',
                    'CHECKOUT',
                    'CONNECT',
                    'COPY',
                    'DELETE',
                    'GET',
                    'HEAD',
                    'LINK',
                    'LOCK',
                    'M-SEARCH',
                    'MERGE',
                    'MKACTIVITY',
                    'MKCALENDAR',
                    'MKCOL',
                    'MOVE',
                    'NOTIFY',
                    'OPTIONS',
                    'PATCH',
                    'POST',
                    'PROPFIND',
                    'PROPPATCH',
                    'PURGE',
                    'PUT',
                    'REBIND',
                    'REPORT',
                    'SEARCH',
                    'SOURCE',
                    'SUBSCRIBE',
                    'TRACE',
                    'UNBIND',
                    'UNLINK',
                    'UNLOCK',
                    'UNSUBSCRIBE' ],
                 STATUS_CODES:
                  { '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': "I'm a Teapot",
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Unordered Collection',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required' },
                 Agent: { [Function: Agent] defaultMaxSockets: Infinity },
                 ClientRequest: [Function: ClientRequest],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 80,
                    protocol: 'http:',
                    options: { path: null },
                    requests: {},
                    sockets: {},
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256 },
                 IncomingMessage: [Function: IncomingMessage],
                 OutgoingMessage: [Function: OutgoingMessage],
                 Server: [Function: Server],
                 ServerResponse: [Function: ServerResponse],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] },
              'https:':
               { Agent: [Function: Agent],
                 globalAgent:
                  Agent {
                    _events: [Object: null prototype] { free: [Function] },
                    _eventsCount: 1,
                    _maxListeners: undefined,
                    defaultPort: 443,
                    protocol: 'https:',
                    options: { path: null },
                    requests: {},
                    sockets:
                     { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                        [ TLSSocket {
                            _tlsOptions:
                             { pipe: false,
                               secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                               isServer: false,
                               requestCert: true,
                               rejectUnauthorized: true,
                               session: undefined,
                               ALPNProtocols: undefined,
                               requestOCSP: undefined },
                            _secureEstablished: true,
                            _securePending: false,
                            _newSessionPending: false,
                            _controlReleased: true,
                            _SNICallback: null,
                            servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                            alpnProtocol: false,
                            authorized: true,
                            authorizationError: null,
                            encrypted: true,
                            _events:
                             [Object: null prototype] {
                               close:
                                [ [Function: onSocketCloseDestroySSL],
                                  { [Function: bound onceWrapper] listener: [Function] },
                                  [Function: onClose],
                                  [Function: socketCloseListener] ],
                               end: [Function: onReadableStreamEnd],
                               secure: [Function: onConnectSecure],
                               free: [Function: onFree],
                               agentRemove: [Function: onRemove],
                               drain: [Function: ondrain],
                               error: [Function: socketErrorListener],
                               finish:
                                { [Function: bound onceWrapper] listener: [Function: destroy] } },
                            _eventsCount: 8,
                            connecting: false,
                            _hadError: false,
                            _handle:
                             TLSWrap {
                               _parent:
                                TCP {
                                  reading: [Getter/Setter],
                                  onread: null,
                                  onconnection: null,
                                  [Symbol(owner)]: [Circular] },
                               _parentWrap: undefined,
                               _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                               reading: true,
                               onread: [Function: onStreamRead],
                               onhandshakestart: [Function: noop],
                               onhandshakedone: [Function: bound ],
                               onocspresponse: [Function: onocspresponse],
                               onerror: [Function: onerror],
                               [Symbol(owner)]: [Circular] },
                            _parent: null,
                            _host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                            _readableState:
                             ReadableState {
                               objectMode: false,
                               highWaterMark: 16384,
                               buffer: BufferList { head: null, tail: null, length: 0 },
                               length: 0,
                               pipes: null,
                               pipesCount: 0,
                               flowing: true,
                               ended: false,
                               endEmitted: false,
                               reading: true,
                               sync: false,
                               needReadable: true,
                               emittedReadable: false,
                               readableListening: false,
                               resumeScheduled: false,
                               emitClose: false,
                               autoDestroy: false,
                               destroyed: false,
                               defaultEncoding: 'utf8',
                               awaitDrain: 0,
                               readingMore: false,
                               decoder: null,
                               encoding: null },
                            readable: true,
                            _maxListeners: undefined,
                            _writableState:
                             WritableState {
                               objectMode: false,
                               highWaterMark: 16384,
                               finalCalled: true,
                               needDrain: false,
                               ending: true,
                               ended: true,
                               finished: false,
                               destroyed: false,
                               decodeStrings: false,
                               defaultEncoding: 'utf8',
                               length: 0,
                               writing: false,
                               corked: 0,
                               sync: false,
                               bufferProcessing: false,
                               onwrite: [Function: bound onwrite],
                               writecb: null,
                               writelen: 0,
                               bufferedRequest: null,
                               lastBufferedRequest: null,
                               pendingcb: 1,
                               prefinished: false,
                               errorEmitted: false,
                               emitClose: false,
                               autoDestroy: false,
                               bufferedRequestCount: 0,
                               corkedRequestsFree:
                                { next: null,
                                  entry: null,
                                  finish: [Function: bound onCorkedFinish] } },
                            writable: false,
                            allowHalfOpen: false,
                            _sockname: null,
                            _pendingData: null,
                            _pendingEncoding: '',
                            server: undefined,
                            _server: null,
                            ssl:
                             TLSWrap {
                               _parent:
                                TCP {
                                  reading: [Getter/Setter],
                                  onread: null,
                                  onconnection: null,
                                  [Symbol(owner)]: [Circular] },
                               _parentWrap: undefined,
                               _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                               reading: true,
                               onread: [Function: onStreamRead],
                               onhandshakestart: [Function: noop],
                               onhandshakedone: [Function: bound ],
                               onocspresponse: [Function: onocspresponse],
                               onerror: [Function: onerror],
                               [Symbol(owner)]: [Circular] },
                            _requestCert: true,
                            _rejectUnauthorized: true,
                            parser: null,
                            _httpMessage: [Circular],
                            [Symbol(res)]:
                             TLSWrap {
                               _parent:
                                TCP {
                                  reading: [Getter/Setter],
                                  onread: null,
                                  onconnection: null,
                                  [Symbol(owner)]: [Circular] },
                               _parentWrap: undefined,
                               _secureContext: SecureContext { context: SecureContext {}, singleUse: true },
                               reading: true,
                               onread: [Function: onStreamRead],
                               onhandshakestart: [Function: noop],
                               onhandshakedone: [Function: bound ],
                               onocspresponse: [Function: onocspresponse],
                               onerror: [Function: onerror],
                               [Symbol(owner)]: [Circular] },
                            [Symbol(asyncId)]: 5,
                            [Symbol(lastWriteQueueSize)]: 0,
                            [Symbol(timeout)]: null,
                            [Symbol(kBytesRead)]: 0,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(connect-options)]:
                             { rejectUnauthorized: true,
                               ciphers:
                                'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                               checkServerIdentity: [Function: checkServerIdentity],
                               minDHSize: 1024,
                               encoding: null,
                               _agentKey:
                                '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::',
                               host: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                               pathname: '/Prod/account/0001',
                               nativeProtocols: [Circular],
                               port: 443,
                               hostname: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                               auth: undefined,
                               agent: undefined,
                               headers:
                                { Accept: 'application/json, text/plain, */*',
                                  'User-Agent': 'axios/0.18.0' },
                               method: 'get',
                               path: null,
                               protocol: 'https:',
                               maxBodyLength: 10485760,
                               maxRedirects: 21,
                               _defaultAgent: [Circular],
                               servername: '51j1fut727.execute-api.eu-west-1.amazonaws.com',
                               singleUse: true } } ] },
                    freeSockets: {},
                    keepAliveMsecs: 1000,
                    keepAlive: false,
                    maxSockets: Infinity,
                    maxFreeSockets: 256,
                    maxCachedSessions: 100,
                    _sessionCache:
                     { map:
                        { '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::':
                           <Buffer 30 82 07 46 02 01 01 02 02 03 03 04 02 c0 2f 04 20 c0 49 06 ac 36 d6 ae e6 c9 fa 2a 68 a5 1c 70 1f c6 7f db 68 95 b5 1a 89 33 4d 9e 6f 2c 78 c8 8c 04 ... 1816 more bytes> },
                       list:
                        [ '51j1fut727.execute-api.eu-west-1.amazonaws.com:443::::::::::::::::' ] } },
                 Server: [Function: Server],
                 createServer: [Function: createServer],
                 get: [Function: get],
                 request: [Function: request] } },
           pathname: '/Prod/account/0001' },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 0,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function],
        _currentRequest: [Circular],
        _currentUrl:
         'https://51j1fut727.execute-api.eu-west-1.amazonaws.com/Prod/account/0001' },
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'user-agent': [ 'User-Agent', 'axios/0.18.0' ],
        host: [ 'Host', '51j1fut727.execute-api.eu-west-1.amazonaws.com' ] } },
  data:
   { product:
      { productCode: 'VW',
        providerId: '001000',
        clientProductCode: 'VSG' },
     lastBillingDate: '2017-08-07',
     cashLimit: { currency: 'USD', value: '96.00' },
     totalDisputes:
      { totalAmount: { currency: 'USD', value: '152.55' },
        count: '14' },
     identifiers: { accountId: '00000015486', cardLast4: '1234' },
     currentBalance: { currency: 'USD', value: '81.00' },
     lastPurchase:
      { date: '2017-08-15',
        amount: { currency: 'USD', value: '10.99' } },
     type: 'Personal',
     paymentDue:
      { outstandingStatementedAmount: { currency: 'USD', value: '0.00' },
        outstandingAmount: { currency: 'USD', value: '-225.59' },
        statementedAmount: { currency: 'USD', value: '44.00' } },
     numberCardsOut: '4',
     openedDate: '2016-07-09',
     paymentDueDate: '2017-08-09',
     statementBalance: { currency: 'USD', value: '240.66' },
     currencyInformation: { code: 'USD', name: 'U.S. DOLLAR' },
     meta:
      { lastMaintenanceDate: '2017-08-14',
        interestRate: '12',
        totalCashAdvanceAmount: { currency: 'USD', value: '0.00' },
        accountAttributes:
         [ { attributeId: '10', description: 'SELECTED', value: 'S' },
           { attributeId: '15', description: '***************', value: '1' },
           { attributeId: '20',
             description: '***************',
             value: '01' },
           { attributeId: '60',
             description: '***************',
             value: 'TESTIN' },
           { attributeId: '65', description: '***************', value: 'G' },
           { attributeId: '90', description: 'TEST', value: '0' },
           { attributeId: '91', description: 'LINE INC AMT', value: '0' },
           { attributeId: '92', description: 'TEST001', value: '0' },
           { attributeId: '93', description: 'MNTHLY MORTGAGE', value: '0' } ],
        totalPurchaseAmount: { currency: 'USD', value: '81.00' },
        expirationDate: '2024-01-05',
        status:
         [ { reason: 'Y', code: 'PG', description: 'PRODUCT CHANGE' },
           { reason: '00',
             code: 'RE',
             description: 'ALL PYMT REQUIREMENTS MET' },
           { reason: 'CU', code: 'DI', description: 'CURRENTLY IN DISPUTE' },
           { reason: 'Y',
             code: 'AC',
             description: 'ADDRESS CHANGE THIS CYCLE' },
           { reason: 'Y', code: 'AV', description: 'ACTIVE THIS CYCLE' },
           { reason: 'PU',
             code: 'FU',
             description: 'FIRST USE WAS PURCHASE' },
           { reason: 'Y', code: 'MA', description: 'ACTIVE THIS MONTH' },
           { reason: 'Y', code: 'YA', description: 'ACTIVE THIS YEAR' },
           { reason: 'Y', code: 'LA', description: 'ACTIVE LAST YEAR' },
           { reason: 'Y', code: 'OA', description: 'ACTIVE SINCE OPENED' },
           { reason: 'Y',
             code: 'PY',
             description: 'PAYMENT ACTIVTY THIS CYC' },
           { reason: 'Y',
             code: 'PU',
             description: 'PURCH ACTIVITY THIS CYCLE' },
           { reason: 'P', code: 'TA', description: 'PERSONAL1 TEST' } ] },
     lateCharges: { currency: 'USD', value: '28.18' },
     purchasesSinceLastCycle: { currency: 'USD', value: '81.00' },
     billingDay: '7',
     previousStatementDate: '2017-08-07',
     creditLimit: { currency: 'USD', value: '1920.00' },
     multiAccount: 'true',
     lastPayment:
      { date: '2017-08-16',
        amount: { currency: 'USD', value: '269.27' } },
     featureToggles:
      { alerts: 'false', autoPay: 'true', overdraftProtection: 'true' },
     outstandingDisputes:
      { totalAmount: { currency: 'USD', value: '152.55' },
        count: '14' } } }
